packer {
  required_plugins {
    windows-update = {
      version = "0.12.0"
      source = "github.com/rgl/windows-update"
    }
  }
}

variable "image_name" {
  type    = string
  default = "jenkins-agent-win2019"
}

variable "location" {
  type    = string
}

variable "maven_version" {
  type    = string
}

variable "git_version" {
  type    = string
}

variable "jdk11_version" {
  type    = string
}

variable "jdk8_version" {
  type    = string
}

variable "git_lfs_version" {
  type    = string
}

variable "client_id" {
  type    = string
}

variable "client_secret" {
  type    = string
}

variable "resource_group_name" {
  type    = string
}

variable "subscription_id" {
  type    = string
}

locals {
  now_unix_timestamp = formatdate("YYYYMMDDhhmmss",timestamp())
}

source "azure-arm" "autogenerated_1" {
  azure_tags = {
    imagetype = "jenkins-agent-win2019"
    timestamp = "${local.now_unix_timestamp}"
  }
  client_id                         = "${var.client_id}"
  client_secret                     = "${var.client_secret}"
  communicator                      = "winrm"
  image_offer                       = "WindowsServer"
  image_publisher                   = "MicrosoftWindowsServer"
  image_sku                         = "2019-Datacenter-Core-with-Containers"
  location                          = "${var.location}"
  managed_image_name                = "${var.image_name}"
  managed_image_resource_group_name = "${var.resource_group_name}"
  os_disk_size_gb                   = 130
  os_type                           = "Windows"
  subscription_id                   = "${var.subscription_id}"
  vm_size                           = "Standard_D4_v3"
  winrm_insecure                    = true
  winrm_timeout                     = "20m"
  winrm_use_ssl                     = true
  winrm_username                    = "packer"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]

  provisioner "windows-update" {
  }

  provisioner "windows-restart" {
  }

  provisioner "powershell" {
    script = "./scripts/test-disk-size.ps1"
  }

  provisioner "powershell" {
    script = "./scripts/test-docker.ps1"
  }

  provisioner "powershell" {
    environment_vars = ["MAVEN_VERSION=${var.maven_version}", "GIT_VERSION=${var.git_version}", "JDK11_VERSION=${var.jdk11_version}", "JDK8_VERSION=${var.jdk8_version}", "GIT_LFS_VERSION=${var.git_lfs_version}", "CLOUD_TYPE=azure"]
    script           = "./scripts/windows-2019-provision.ps1"
  }

  post-processor "manifest" {
    output     = "manifest.json"
    strip_path = true
  }
}
